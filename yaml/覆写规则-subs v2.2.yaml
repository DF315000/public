# DNS配置（通用格式）
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.services.googleapis.cn"
    - "+.xn--ngstr-lra8j.com"
    - "time.*.com"

  default-nameserver:
    - 223.5.5.5  # 阿里DNS
    - 119.29.29.29  # 腾讯DNS
    - 114.114.114.114  # 114DNS

  nameserver:
    - 223.5.5.5  # 阿里DNS
    - 119.29.29.29  # 腾讯DNS
    - 114.114.114.114  # 114DNS
  
  proxy-server-nameserver:
    - 114.114.114.114  # 114DNS
    - 119.29.29.29  # 腾讯DNS
    - 8.8.8.8  # Google
    - 1.1.1.1  # Cloudflare
  
  fallback:
    - 114.114.114.114  # 114DNS
    - 119.29.29.29  # 腾讯DNS
    - 8.8.8.8  # Google
    - 1.1.1.1  # Cloudflare

# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
pr: &pr {type: select, proxies: [🚀 默认代理, ♻️ 自动选择, ♻️ 亚太自动,♻️ 香港自动, ♻️ 日本自动, ♻️ 新加坡自动, ♻️ 美国自动, 📹 YouTube自动, 🤖 OpenAI自动, 🌐 全部节点, DIRECT]}
proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [♻️ 自动选择, ♻️ 亚太自动,♻️ 香港自动, ♻️ 日本自动, ♻️ 新加坡自动, ♻️ 美国自动, 📹 YouTube自动, 🤖 OpenAI自动, 🌐 全部节点, DIRECT]}
  - {name: 🌐 全部节点, type: select, include-all: true}
  - {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(官网|节点|流量|套餐|直连|DIRECT|direct)).)*$"}
  - {name: ♻️ 亚太自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong|新|日|台|韩|美|SG|JP|TW|KR|US|(?i)Singapore|(?i)Japan|(?i)Taiwan|(?i)Korea|(?i)America))^((?!.*(compatible|cmpatibal|兼容|不能|官网|节点|流量|套餐|直连|DIRECT|direct|尼日利亚)).)*$"}
  - {name: ♻️ 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美|官网|节点|流量|套餐|直连|DIRECT|direct|尼日利亚)).)*$"}
  - {name: ♻️ 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美|官网|节点|流量|套餐|直连|DIRECT|direct|尼日利亚)).)*$" }
  - {name: ♻️ 新加坡自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(新|SG|(?i)Singapore))^((?!(港|台|日|韩|美|官网|节点|流量|套餐|直连|DIRECT|direct|尼日利亚)).)*$"}
  - {name: ♻️ 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新|官网|节点|流量|套餐|直连|DIRECT|direct|尼日利亚)).)*$"}
  - {name: 📹 YouTube自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(Youtube|youtube))^((?!.*(compatible|cmpatibal|兼容|不能|官网|直连|direct|DIRECT)).)*$"}
  - {name: 🤖 OpenAI自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(Openai|openai))^((?!.*(compatible|cmpatibal|兼容|不能|官网|直连|direct|DIRECT)).)*$"}
#  - {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
#  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)日|jp|japan"}
#  - {name: 🇺🇲 美国节点, type: select, include-all: true, filter: "(?i)美|us|unitedstates|united states"}
#  - {name: 🔯 香港故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
#  - {name: 🔯 日本故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: 📹 YouTube, <<: *pr}
#  - {name: 🍀 Google, <<: *pr}
  - {name: 🤖 AI, <<: *pr}
  - {name: 📲 Telegram, <<: *pr}
  - {name: 🐬 OneDrive, <<: *pr}
  - {name: 🍎 Apple, <<: *pr}
  - {name: 🪟 Microsoft, <<: *pr}
  - {name: 🐟 漏网之鱼, <<: *pr}
#  - {name: 👨🏿‍💻 GitHub, <<: *pr}
#  - {name: 🎵 TikTok, <<: *pr}
#  - {name: 🎥 NETFLIX, <<: *pr}
#  - {name: ✈️ Speedtest, <<: *pr}
#  - {name: �� PayPal, <<: *pr}

# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
  - DOMAIN-SUFFIX,qichiyu.com,🚀 默认代理
  - RULE-SET,private_domain,DIRECT
  - RULE-SET,ai,🤖 AI
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,github_domain,🚀 默认代理  # GitHub
  - DOMAIN-SUFFIX,windy.com,DIRECT
  - DOMAIN-SUFFIX,bitwarden.com,DIRECT
  - DOMAIN-SUFFIX,maxdf.uk,DIRECT
  - DOMAIN-KEYWORD,gemini,🤖 AI
  - DOMAIN-SUFFIX,mirror-earth.com,DIRECT
  - RULE-SET,cn_ip,DIRECT,no-resolve
  - RULE-SET,cn_domain,DIRECT
  - RULE-SET,direct_list,DIRECT
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,apple_domain,🍎 Apple

  - RULE-SET,proxylite,🚀 默认代理
  - RULE-SET,speedtest_domain,🚀 默认代理  #✈️ Speedtest
  - RULE-SET,microsoft_domain,🪟 Microsoft
  
  - RULE-SET,youtube_domain,🚀 默认代理  #📹 YouTube
  - RULE-SET,google_ip,🚀 默认代理,no-resolve #🍀 Google
  - RULE-SET,google_domain,🚀 默认代理  #🍀 Google
  - RULE-SET,paypal_domain,🚀 默认代理  #💶 PayPal
  - RULE-SET,tiktok_domain,🚀 默认代理  #🎵 TikTok
  - RULE-SET,netflix_domain,🚀 默认代理  #🎥 NETFLIX
  - RULE-SET,netflix_ip,🚀 默认代理,no-resolve  #🎥 NETFLIX
  - RULE-SET,gfw_domain,🚀 默认代理
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - MATCH,🐟 漏网之鱼


# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxylite: { <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/ProxyLite.list"}
  ai: {  <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-chat-!cn.mrs" }
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  
  direct_list: { <<: *domain, url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/v2ray-rules-dat@release/direct-list.txt"}
